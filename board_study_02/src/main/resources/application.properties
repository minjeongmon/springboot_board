# 서버 재시작 없이 정적 소스 반영
spring.devtools.livereload.enabled=true
spring.freemarker.cache=false
spring.thymeleaf.cache=false

# MySQL 설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# DB Source URL 설정
#allowPublicKeyRetrieval=true 설정 추가해줘야됨 mysql8.0 이상은 보안적 이슈로 추가적인 설정 필요
# 예시) spring.datasource.url=jdbc:mysql://localhost:3306/board?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul
spring.datasource.url=jdbc:mysql://localhost:3306/new_board?useSSL=false&allowPublicKeyRetrieval=true&useUnicode=true&serverTimezone=Asia/Seoul


# DB 사용자 이름 설정
# 예시) spring.datasource.username=root
spring.datasource.username=root

# DB 사용자이름에 대한 암호 설정
# 예시) spring.datasource.password=root
spring.datasource.password=1215


# DDL(create, alter, drop) 정의 시, DB의 고유 기능을 사용할 수 있음.
# spring.jpa.hibernate.ddl-auto=update 

# true 설정 시, JPA 쿼리문 확인 가능
# spring.jpa.show-sql=true



# JPA에서 SQL문 확인 가능 : 위에 기재되어 있는 방법은 공식문서에서 추천하지 않는다고 함 
logging.level.org.hibernate.SQL=DEBUG
logging.level.com.study=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# JPA의 구현체인 Hibernate가 동작하면서, 발생한 SQL의 가독성을 높여줌.
spring.jpa.properties.hibernate.format_sql=true

# static 경로를 webapp 밑으로 된 파일에서 찾을 예정
# spring.mvc.static-path-pattern=/webapp/**